// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP CS0713RAM64K {
    IN in[16], load, address[16];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=load,sel=address[14..15],a=load0,b=load1,c=load2,d=load3);
    CS0713RAM16K(in=in,load=load0,address=address[0..13],out=out0);
    CS0713RAM16K(in=in,load=load1,address=address[0..13],out=out1);
    CS0713RAM16K(in=in,load=load2,address=address[0..13],out=out2);
    CS0713RAM16K(in=in,load=load3,address=address[0..13],out=out3);
    Mux4Way16(a=out0,b=out1,c=out2,d=out3,sel=address[14..15],out=out);
}